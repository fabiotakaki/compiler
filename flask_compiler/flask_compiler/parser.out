Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    FP
    PALAVRA_RESERVADA_DO
    SIMBOLOS_ESPECIAIS_DELIMITADOR
    PALAVRA_RESERVADA_PROCEDURE
    PALAVRA_RESERVADA_ELSE
    PALAVRA_RESERVADA_END
    PALAVRA_RESERVADA_THEN
    PALAVRA_RESERVADA_BEGIN
    COMENTARIOMULTILINHA
    SIMBOLOS_ESPECIAIS_DOIS_PONTOS
    COMENTARIOS_UMA_LINHA
    SIMBOLOS_ESPECIAIS_MAIOR
    AP
    PALAVRA_RESERVADA_IF
    PALAVRA_RESERVADA_PROGRAM
    PALAVRA_RESERVADA_WHILE
    SIMBOLOS_ESPECIAIS_PONTO_FINAL
    PALAVRA_RESERVADA_VAR
    SIMBOLOS_ESPECIAIS_MENOR_IGUAL
    SIMBOLOS_ESPECIAIS_MAIOR_IGUAL
    SIMBOLOS_ESPECIAIS_VIRGULA
    SIMBOLOS_ESPECIAIS_MENOR

Grammar

Rule 0     S' -> root
Rule 1     root -> expression
Rule 2     root -> var_assign
Rule 3     root -> empty
Rule 4     expression -> expression OPMUL expression
Rule 5     expression -> expression OPDIV expression
Rule 6     expression -> expression OPSOMA expression
Rule 7     expression -> expression OPSUB expression
Rule 8     expression -> NUMERO_INTEIRO
Rule 9     expression -> NUMERO_REAL
Rule 10    empty -> <empty>
Rule 11    var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO expression
Rule 12    var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO IDENTIFICADOR

Terminals, with rules where they appear

AP                   : 
COMENTARIOMULTILINHA : 
COMENTARIOS_UMA_LINHA : 
FP                   : 
IDENTIFICADOR        : 11 12 12
NUMERO_INTEIRO       : 8
NUMERO_REAL          : 9
OPDIV                : 5
OPMUL                : 4
OPSOMA               : 6
OPSUB                : 7
PALAVRA_RESERVADA_BEGIN : 
PALAVRA_RESERVADA_DO : 
PALAVRA_RESERVADA_ELSE : 
PALAVRA_RESERVADA_END : 
PALAVRA_RESERVADA_IF : 
PALAVRA_RESERVADA_PROCEDURE : 
PALAVRA_RESERVADA_PROGRAM : 
PALAVRA_RESERVADA_THEN : 
PALAVRA_RESERVADA_VAR : 
PALAVRA_RESERVADA_WHILE : 
SIMBOLOS_ESPECIAIS_ATRIBUICAO : 11 12
SIMBOLOS_ESPECIAIS_DELIMITADOR : 
SIMBOLOS_ESPECIAIS_DOIS_PONTOS : 
SIMBOLOS_ESPECIAIS_MAIOR : 
SIMBOLOS_ESPECIAIS_MAIOR_IGUAL : 
SIMBOLOS_ESPECIAIS_MENOR : 
SIMBOLOS_ESPECIAIS_MENOR_IGUAL : 
SIMBOLOS_ESPECIAIS_PONTO_FINAL : 
SIMBOLOS_ESPECIAIS_VIRGULA : 
error                : 

Nonterminals, with rules where they appear

empty                : 3
expression           : 1 4 4 5 5 6 6 7 7 11
root                 : 0
var_assign           : 2

Parsing method: LALR

state 0

    (0) S' -> . root
    (1) root -> . expression
    (2) root -> . var_assign
    (3) root -> . empty
    (4) expression -> . expression OPMUL expression
    (5) expression -> . expression OPDIV expression
    (6) expression -> . expression OPSOMA expression
    (7) expression -> . expression OPSUB expression
    (8) expression -> . NUMERO_INTEIRO
    (9) expression -> . NUMERO_REAL
    (11) var_assign -> . IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO expression
    (12) var_assign -> . IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO IDENTIFICADOR
    (10) empty -> .

    NUMERO_INTEIRO  shift and go to state 7
    NUMERO_REAL     shift and go to state 3
    IDENTIFICADOR   shift and go to state 2
    $end            reduce using rule 10 (empty -> .)

    expression                     shift and go to state 5
    var_assign                     shift and go to state 4
    root                           shift and go to state 1
    empty                          shift and go to state 6

state 1

    (0) S' -> root .



state 2

    (11) var_assign -> IDENTIFICADOR . SIMBOLOS_ESPECIAIS_ATRIBUICAO expression
    (12) var_assign -> IDENTIFICADOR . SIMBOLOS_ESPECIAIS_ATRIBUICAO IDENTIFICADOR

    SIMBOLOS_ESPECIAIS_ATRIBUICAO shift and go to state 8


state 3

    (9) expression -> NUMERO_REAL .

    OPMUL           reduce using rule 9 (expression -> NUMERO_REAL .)
    OPDIV           reduce using rule 9 (expression -> NUMERO_REAL .)
    OPSOMA          reduce using rule 9 (expression -> NUMERO_REAL .)
    OPSUB           reduce using rule 9 (expression -> NUMERO_REAL .)
    $end            reduce using rule 9 (expression -> NUMERO_REAL .)


state 4

    (2) root -> var_assign .

    $end            reduce using rule 2 (root -> var_assign .)


state 5

    (1) root -> expression .
    (4) expression -> expression . OPMUL expression
    (5) expression -> expression . OPDIV expression
    (6) expression -> expression . OPSOMA expression
    (7) expression -> expression . OPSUB expression

    $end            reduce using rule 1 (root -> expression .)
    OPMUL           shift and go to state 9
    OPDIV           shift and go to state 11
    OPSOMA          shift and go to state 10
    OPSUB           shift and go to state 12


state 6

    (3) root -> empty .

    $end            reduce using rule 3 (root -> empty .)


state 7

    (8) expression -> NUMERO_INTEIRO .

    OPMUL           reduce using rule 8 (expression -> NUMERO_INTEIRO .)
    OPDIV           reduce using rule 8 (expression -> NUMERO_INTEIRO .)
    OPSOMA          reduce using rule 8 (expression -> NUMERO_INTEIRO .)
    OPSUB           reduce using rule 8 (expression -> NUMERO_INTEIRO .)
    $end            reduce using rule 8 (expression -> NUMERO_INTEIRO .)


state 8

    (11) var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO . expression
    (12) var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO . IDENTIFICADOR
    (4) expression -> . expression OPMUL expression
    (5) expression -> . expression OPDIV expression
    (6) expression -> . expression OPSOMA expression
    (7) expression -> . expression OPSUB expression
    (8) expression -> . NUMERO_INTEIRO
    (9) expression -> . NUMERO_REAL

    IDENTIFICADOR   shift and go to state 13
    NUMERO_INTEIRO  shift and go to state 7
    NUMERO_REAL     shift and go to state 3

    expression                     shift and go to state 14

state 9

    (4) expression -> expression OPMUL . expression
    (4) expression -> . expression OPMUL expression
    (5) expression -> . expression OPDIV expression
    (6) expression -> . expression OPSOMA expression
    (7) expression -> . expression OPSUB expression
    (8) expression -> . NUMERO_INTEIRO
    (9) expression -> . NUMERO_REAL

    NUMERO_INTEIRO  shift and go to state 7
    NUMERO_REAL     shift and go to state 3

    expression                     shift and go to state 15

state 10

    (6) expression -> expression OPSOMA . expression
    (4) expression -> . expression OPMUL expression
    (5) expression -> . expression OPDIV expression
    (6) expression -> . expression OPSOMA expression
    (7) expression -> . expression OPSUB expression
    (8) expression -> . NUMERO_INTEIRO
    (9) expression -> . NUMERO_REAL

    NUMERO_INTEIRO  shift and go to state 7
    NUMERO_REAL     shift and go to state 3

    expression                     shift and go to state 16

state 11

    (5) expression -> expression OPDIV . expression
    (4) expression -> . expression OPMUL expression
    (5) expression -> . expression OPDIV expression
    (6) expression -> . expression OPSOMA expression
    (7) expression -> . expression OPSUB expression
    (8) expression -> . NUMERO_INTEIRO
    (9) expression -> . NUMERO_REAL

    NUMERO_INTEIRO  shift and go to state 7
    NUMERO_REAL     shift and go to state 3

    expression                     shift and go to state 17

state 12

    (7) expression -> expression OPSUB . expression
    (4) expression -> . expression OPMUL expression
    (5) expression -> . expression OPDIV expression
    (6) expression -> . expression OPSOMA expression
    (7) expression -> . expression OPSUB expression
    (8) expression -> . NUMERO_INTEIRO
    (9) expression -> . NUMERO_REAL

    NUMERO_INTEIRO  shift and go to state 7
    NUMERO_REAL     shift and go to state 3

    expression                     shift and go to state 18

state 13

    (12) var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO IDENTIFICADOR .

    $end            reduce using rule 12 (var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO IDENTIFICADOR .)


state 14

    (11) var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO expression .
    (4) expression -> expression . OPMUL expression
    (5) expression -> expression . OPDIV expression
    (6) expression -> expression . OPSOMA expression
    (7) expression -> expression . OPSUB expression

    $end            reduce using rule 11 (var_assign -> IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO expression .)
    OPMUL           shift and go to state 9
    OPDIV           shift and go to state 11
    OPSOMA          shift and go to state 10
    OPSUB           shift and go to state 12


state 15

    (4) expression -> expression OPMUL expression .
    (4) expression -> expression . OPMUL expression
    (5) expression -> expression . OPDIV expression
    (6) expression -> expression . OPSOMA expression
    (7) expression -> expression . OPSUB expression

    OPMUL           reduce using rule 4 (expression -> expression OPMUL expression .)
    OPDIV           reduce using rule 4 (expression -> expression OPMUL expression .)
    OPSOMA          reduce using rule 4 (expression -> expression OPMUL expression .)
    OPSUB           reduce using rule 4 (expression -> expression OPMUL expression .)
    $end            reduce using rule 4 (expression -> expression OPMUL expression .)

  ! OPMUL           [ shift and go to state 9 ]
  ! OPDIV           [ shift and go to state 11 ]
  ! OPSOMA          [ shift and go to state 10 ]
  ! OPSUB           [ shift and go to state 12 ]


state 16

    (6) expression -> expression OPSOMA expression .
    (4) expression -> expression . OPMUL expression
    (5) expression -> expression . OPDIV expression
    (6) expression -> expression . OPSOMA expression
    (7) expression -> expression . OPSUB expression

    OPSOMA          reduce using rule 6 (expression -> expression OPSOMA expression .)
    OPSUB           reduce using rule 6 (expression -> expression OPSOMA expression .)
    $end            reduce using rule 6 (expression -> expression OPSOMA expression .)
    OPMUL           shift and go to state 9
    OPDIV           shift and go to state 11

  ! OPMUL           [ reduce using rule 6 (expression -> expression OPSOMA expression .) ]
  ! OPDIV           [ reduce using rule 6 (expression -> expression OPSOMA expression .) ]
  ! OPSOMA          [ shift and go to state 10 ]
  ! OPSUB           [ shift and go to state 12 ]


state 17

    (5) expression -> expression OPDIV expression .
    (4) expression -> expression . OPMUL expression
    (5) expression -> expression . OPDIV expression
    (6) expression -> expression . OPSOMA expression
    (7) expression -> expression . OPSUB expression

    OPMUL           reduce using rule 5 (expression -> expression OPDIV expression .)
    OPDIV           reduce using rule 5 (expression -> expression OPDIV expression .)
    OPSOMA          reduce using rule 5 (expression -> expression OPDIV expression .)
    OPSUB           reduce using rule 5 (expression -> expression OPDIV expression .)
    $end            reduce using rule 5 (expression -> expression OPDIV expression .)

  ! OPMUL           [ shift and go to state 9 ]
  ! OPDIV           [ shift and go to state 11 ]
  ! OPSOMA          [ shift and go to state 10 ]
  ! OPSUB           [ shift and go to state 12 ]


state 18

    (7) expression -> expression OPSUB expression .
    (4) expression -> expression . OPMUL expression
    (5) expression -> expression . OPDIV expression
    (6) expression -> expression . OPSOMA expression
    (7) expression -> expression . OPSUB expression

    OPSOMA          reduce using rule 7 (expression -> expression OPSUB expression .)
    OPSUB           reduce using rule 7 (expression -> expression OPSUB expression .)
    $end            reduce using rule 7 (expression -> expression OPSUB expression .)
    OPMUL           shift and go to state 9
    OPDIV           shift and go to state 11

  ! OPMUL           [ reduce using rule 7 (expression -> expression OPSUB expression .) ]
  ! OPDIV           [ reduce using rule 7 (expression -> expression OPSUB expression .) ]
  ! OPSOMA          [ shift and go to state 10 ]
  ! OPSUB           [ shift and go to state 12 ]

