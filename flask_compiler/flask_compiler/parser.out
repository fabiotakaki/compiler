Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIOMULTILINHA
    OPDIV
    SE_PONTO_FINAL
    FIMCOMENTARIO
    COMENTARIOS_UMA_LINHA
    SE_ATRIBUICAO

Grammar

Rule 0     S' -> program
Rule 1     program -> RES_PROGRAM IDENTIFICADOR SE_DELIMITADOR block
Rule 2     block -> part_declare_variables compound_command
Rule 3     block -> part_declare_subroutines compound_command
Rule 4     block -> compound_command
Rule 5     part_declare_variables -> declare_variables SE_DELIMITADOR part_declare_variables
Rule 6     part_declare_variables -> empty
Rule 7     type -> RES_INT
Rule 8     type -> RES_BOOLEAN
Rule 9     declare_variables -> type list_ids
Rule 10    list_ids -> IDENTIFICADOR
Rule 11    list_ids -> SE_VIRGULA list_ids
Rule 12    list_ids -> empty
Rule 13    part_declare_subroutines -> declare_procedure part_declare_subroutines
Rule 14    part_declare_subroutines -> empty
Rule 15    declare_procedure -> RES_PROCEDURE IDENTIFICADOR formal_parameters block
Rule 16    declare_procedure -> RES_PROCEDURE IDENTIFICADOR block
Rule 17    formal_parameters -> AP section_formal_parameters FP
Rule 18    section_formal_parameters -> RES_VAR list_ids SE_DOIS_PONTOS IDENTIFICADOR
Rule 19    section_formal_parameters -> list_ids SE_DOIS_PONTOS IDENTIFICADOR
Rule 20    compound_command -> RES_BEGIN commands RES_END
Rule 21    commands -> command
Rule 22    commands -> commands
Rule 23    command -> assignment
Rule 24    command -> calling_procedure
Rule 25    command -> compound_command
Rule 26    command -> command_conditional_1
Rule 27    command -> command_loop_1
Rule 28    assignment -> variable
Rule 29    assignment -> expression
Rule 30    calling_procedure -> IDENTIFICADOR
Rule 31    calling_procedure -> IDENTIFICADOR AP list_expression FP
Rule 32    command_conditional_1 -> RES_IF expression RES_THEN command
Rule 33    command_conditional_1 -> RES_IF expression RES_THEN command RES_ELSE command
Rule 34    command_loop_1 -> RES_WHILE expression RES_DO command
Rule 35    expression -> simple_expression
Rule 36    expression -> simple_expression relation simple_expression
Rule 37    relation -> SE_IGUAL
Rule 38    relation -> SE_DIFERENTE
Rule 39    relation -> SE_MENOR
Rule 40    relation -> SE_MENOR_IGUAL
Rule 41    relation -> SE_MAIOR_IGUAL
Rule 42    relation -> SE_MAIOR
Rule 43    simple_expression -> OPSOMA term simple_expression_1
Rule 44    simple_expression -> OPSUB term simple_expression_1
Rule 45    simple_expression -> OPSOMA term
Rule 46    simple_expression -> OPSUB term
Rule 47    simple_expression_1 -> OPSOMA term simple_expression_1
Rule 48    simple_expression_1 -> OPSUB term simple_expression_1
Rule 49    simple_expression_1 -> RES_OR term simple_expression_1
Rule 50    simple_expression_1 -> empty
Rule 51    term -> factor term_1
Rule 52    term -> factor
Rule 53    term_1 -> OPMUL factor
Rule 54    term_1 -> RES_DIV factor
Rule 55    term_1 -> RES_AND factor
Rule 56    term_1 -> term_1
Rule 57    factor -> variable
Rule 58    factor -> NUMERO
Rule 59    factor -> AP expression FP
Rule 60    factor -> RES_NOT factor
Rule 61    variable -> IDENTIFICADOR
Rule 62    variable -> IDENTIFICADOR expression
Rule 63    list_expression -> expression
Rule 64    list_expression -> expression expression_1
Rule 65    expression_1 -> SE_VIRGULA expression
Rule 66    expression_1 -> expression_1
Rule 67    empty -> <empty>

Terminals, with rules where they appear

AP                   : 17 31 59
COMENTARIOMULTILINHA : 
COMENTARIOS_UMA_LINHA : 
FIMCOMENTARIO        : 
FP                   : 17 31 59
IDENTIFICADOR        : 1 10 15 16 18 19 30 31 61 62
NUMERO               : 58
OPDIV                : 
OPMUL                : 53
OPSOMA               : 43 45 47
OPSUB                : 44 46 48
RES_AND              : 55
RES_BEGIN            : 20
RES_BOOLEAN          : 8
RES_DIV              : 54
RES_DO               : 34
RES_ELSE             : 33
RES_END              : 20
RES_IF               : 32 33
RES_INT              : 7
RES_NOT              : 60
RES_OR               : 49
RES_PROCEDURE        : 15 16
RES_PROGRAM          : 1
RES_THEN             : 32 33
RES_VAR              : 18
RES_WHILE            : 34
SE_ATRIBUICAO        : 
SE_DELIMITADOR       : 1 5
SE_DIFERENTE         : 38
SE_DOIS_PONTOS       : 18 19
SE_IGUAL             : 37
SE_MAIOR             : 42
SE_MAIOR_IGUAL       : 41
SE_MENOR             : 39
SE_MENOR_IGUAL       : 40
SE_PONTO_FINAL       : 
SE_VIRGULA           : 11 65
error                : 

Nonterminals, with rules where they appear

assignment           : 23
block                : 1 15 16
calling_procedure    : 24
command              : 21 32 33 33 34
command_conditional_1 : 26
command_loop_1       : 27
commands             : 20 22
compound_command     : 2 3 4 25
declare_procedure    : 13
declare_variables    : 5
empty                : 6 12 14 50
expression           : 29 32 33 34 59 62 63 64 65
expression_1         : 64 66
factor               : 51 52 53 54 55 60
formal_parameters    : 15
list_expression      : 31
list_ids             : 9 11 18 19
part_declare_subroutines : 3 13
part_declare_variables : 2 5
program              : 0
relation             : 36
section_formal_parameters : 17
simple_expression    : 35 36 36
simple_expression_1  : 43 44 47 48 49
term                 : 43 44 45 46 47 48 49
term_1               : 51 56
type                 : 9
variable             : 28 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . RES_PROGRAM IDENTIFICADOR SE_DELIMITADOR block

    RES_PROGRAM     shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> RES_PROGRAM . IDENTIFICADOR SE_DELIMITADOR block

    IDENTIFICADOR   shift and go to state 3


state 3

    (1) program -> RES_PROGRAM IDENTIFICADOR . SE_DELIMITADOR block

    SE_DELIMITADOR  shift and go to state 4


state 4

    (1) program -> RES_PROGRAM IDENTIFICADOR SE_DELIMITADOR . block
    (2) block -> . part_declare_variables compound_command
    (3) block -> . part_declare_subroutines compound_command
    (4) block -> . compound_command
    (5) part_declare_variables -> . declare_variables SE_DELIMITADOR part_declare_variables
    (6) part_declare_variables -> . empty
    (13) part_declare_subroutines -> . declare_procedure part_declare_subroutines
    (14) part_declare_subroutines -> . empty
    (20) compound_command -> . RES_BEGIN commands RES_END
    (9) declare_variables -> . type list_ids
    (67) empty -> .
    (15) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR formal_parameters block
    (16) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR block
    (7) type -> . RES_INT
    (8) type -> . RES_BOOLEAN

  ! shift/reduce conflict for RES_BEGIN resolved as shift
    RES_BEGIN       shift and go to state 6
    RES_PROCEDURE   shift and go to state 16
    RES_INT         shift and go to state 5
    RES_BOOLEAN     shift and go to state 7

  ! RES_BEGIN       [ reduce using rule 67 (empty -> .) ]

    compound_command               shift and go to state 9
    declare_variables              shift and go to state 10
    part_declare_variables         shift and go to state 11
    block                          shift and go to state 15
    part_declare_subroutines       shift and go to state 13
    declare_procedure              shift and go to state 14
    type                           shift and go to state 8
    empty                          shift and go to state 12

state 5

    (7) type -> RES_INT .

    IDENTIFICADOR   reduce using rule 7 (type -> RES_INT .)
    SE_VIRGULA      reduce using rule 7 (type -> RES_INT .)
    SE_DELIMITADOR  reduce using rule 7 (type -> RES_INT .)


state 6

    (20) compound_command -> RES_BEGIN . commands RES_END
    (21) commands -> . command
    (22) commands -> . commands
    (23) command -> . assignment
    (24) command -> . calling_procedure
    (25) command -> . compound_command
    (26) command -> . command_conditional_1
    (27) command -> . command_loop_1
    (28) assignment -> . variable
    (29) assignment -> . expression
    (30) calling_procedure -> . IDENTIFICADOR
    (31) calling_procedure -> . IDENTIFICADOR AP list_expression FP
    (20) compound_command -> . RES_BEGIN commands RES_END
    (32) command_conditional_1 -> . RES_IF expression RES_THEN command
    (33) command_conditional_1 -> . RES_IF expression RES_THEN command RES_ELSE command
    (34) command_loop_1 -> . RES_WHILE expression RES_DO command
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    IDENTIFICADOR   shift and go to state 23
    RES_BEGIN       shift and go to state 6
    RES_IF          shift and go to state 19
    RES_WHILE       shift and go to state 25
    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    commands                       shift and go to state 27
    command_conditional_1          shift and go to state 20
    assignment                     shift and go to state 22
    calling_procedure              shift and go to state 28
    compound_command               shift and go to state 21
    command_loop_1                 shift and go to state 24
    command                        shift and go to state 30
    variable                       shift and go to state 26
    simple_expression              shift and go to state 18
    expression                     shift and go to state 31

state 7

    (8) type -> RES_BOOLEAN .

    IDENTIFICADOR   reduce using rule 8 (type -> RES_BOOLEAN .)
    SE_VIRGULA      reduce using rule 8 (type -> RES_BOOLEAN .)
    SE_DELIMITADOR  reduce using rule 8 (type -> RES_BOOLEAN .)


state 8

    (9) declare_variables -> type . list_ids
    (10) list_ids -> . IDENTIFICADOR
    (11) list_ids -> . SE_VIRGULA list_ids
    (12) list_ids -> . empty
    (67) empty -> .

    IDENTIFICADOR   shift and go to state 32
    SE_VIRGULA      shift and go to state 34
    SE_DELIMITADOR  reduce using rule 67 (empty -> .)

    list_ids                       shift and go to state 33
    empty                          shift and go to state 35

state 9

    (4) block -> compound_command .

    RES_PROCEDURE   reduce using rule 4 (block -> compound_command .)
    RES_BEGIN       reduce using rule 4 (block -> compound_command .)
    $end            reduce using rule 4 (block -> compound_command .)


state 10

    (5) part_declare_variables -> declare_variables . SE_DELIMITADOR part_declare_variables

    SE_DELIMITADOR  shift and go to state 36


state 11

    (2) block -> part_declare_variables . compound_command
    (20) compound_command -> . RES_BEGIN commands RES_END

    RES_BEGIN       shift and go to state 6

    compound_command               shift and go to state 37

state 12

    (6) part_declare_variables -> empty .
    (14) part_declare_subroutines -> empty .

  ! reduce/reduce conflict for RES_BEGIN resolved using rule 6 (part_declare_variables -> empty .)
    RES_BEGIN       reduce using rule 6 (part_declare_variables -> empty .)

  ! RES_BEGIN       [ reduce using rule 14 (part_declare_subroutines -> empty .) ]


state 13

    (3) block -> part_declare_subroutines . compound_command
    (20) compound_command -> . RES_BEGIN commands RES_END

    RES_BEGIN       shift and go to state 6

    compound_command               shift and go to state 38

state 14

    (13) part_declare_subroutines -> declare_procedure . part_declare_subroutines
    (13) part_declare_subroutines -> . declare_procedure part_declare_subroutines
    (14) part_declare_subroutines -> . empty
    (15) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR formal_parameters block
    (16) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR block
    (67) empty -> .

    RES_PROCEDURE   shift and go to state 16
    RES_BEGIN       reduce using rule 67 (empty -> .)

    part_declare_subroutines       shift and go to state 39
    declare_procedure              shift and go to state 14
    empty                          shift and go to state 40

state 15

    (1) program -> RES_PROGRAM IDENTIFICADOR SE_DELIMITADOR block .

    $end            reduce using rule 1 (program -> RES_PROGRAM IDENTIFICADOR SE_DELIMITADOR block .)


state 16

    (15) declare_procedure -> RES_PROCEDURE . IDENTIFICADOR formal_parameters block
    (16) declare_procedure -> RES_PROCEDURE . IDENTIFICADOR block

    IDENTIFICADOR   shift and go to state 41


state 17

    (43) simple_expression -> OPSOMA . term simple_expression_1
    (45) simple_expression -> OPSOMA . term
    (51) term -> . factor term_1
    (52) term -> . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    term                           shift and go to state 42
    variable                       shift and go to state 47
    factor                         shift and go to state 48

state 18

    (35) expression -> simple_expression .
    (36) expression -> simple_expression . relation simple_expression
    (37) relation -> . SE_IGUAL
    (38) relation -> . SE_DIFERENTE
    (39) relation -> . SE_MENOR
    (40) relation -> . SE_MENOR_IGUAL
    (41) relation -> . SE_MAIOR_IGUAL
    (42) relation -> . SE_MAIOR

  ! shift/reduce conflict for SE_IGUAL resolved as shift
  ! shift/reduce conflict for SE_DIFERENTE resolved as shift
  ! shift/reduce conflict for SE_MENOR resolved as shift
  ! shift/reduce conflict for SE_MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for SE_MAIOR_IGUAL resolved as shift
  ! shift/reduce conflict for SE_MAIOR resolved as shift
    RES_ELSE        reduce using rule 35 (expression -> simple_expression .)
    RES_END         reduce using rule 35 (expression -> simple_expression .)
    RES_THEN        reduce using rule 35 (expression -> simple_expression .)
    FP              reduce using rule 35 (expression -> simple_expression .)
    SE_VIRGULA      reduce using rule 35 (expression -> simple_expression .)
    OPSOMA          reduce using rule 35 (expression -> simple_expression .)
    OPSUB           reduce using rule 35 (expression -> simple_expression .)
    RES_OR          reduce using rule 35 (expression -> simple_expression .)
    RES_DO          reduce using rule 35 (expression -> simple_expression .)
    OPMUL           reduce using rule 35 (expression -> simple_expression .)
    RES_DIV         reduce using rule 35 (expression -> simple_expression .)
    RES_AND         reduce using rule 35 (expression -> simple_expression .)
    SE_IGUAL        shift and go to state 52
    SE_DIFERENTE    shift and go to state 49
    SE_MENOR        shift and go to state 50
    SE_MENOR_IGUAL  shift and go to state 53
    SE_MAIOR_IGUAL  shift and go to state 55
    SE_MAIOR        shift and go to state 51

  ! SE_IGUAL        [ reduce using rule 35 (expression -> simple_expression .) ]
  ! SE_DIFERENTE    [ reduce using rule 35 (expression -> simple_expression .) ]
  ! SE_MENOR        [ reduce using rule 35 (expression -> simple_expression .) ]
  ! SE_MENOR_IGUAL  [ reduce using rule 35 (expression -> simple_expression .) ]
  ! SE_MAIOR_IGUAL  [ reduce using rule 35 (expression -> simple_expression .) ]
  ! SE_MAIOR        [ reduce using rule 35 (expression -> simple_expression .) ]

    relation                       shift and go to state 54

state 19

    (32) command_conditional_1 -> RES_IF . expression RES_THEN command
    (33) command_conditional_1 -> RES_IF . expression RES_THEN command RES_ELSE command
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    simple_expression              shift and go to state 18
    expression                     shift and go to state 56

state 20

    (26) command -> command_conditional_1 .

    RES_END         reduce using rule 26 (command -> command_conditional_1 .)
    RES_ELSE        reduce using rule 26 (command -> command_conditional_1 .)


state 21

    (25) command -> compound_command .

    RES_END         reduce using rule 25 (command -> compound_command .)
    RES_ELSE        reduce using rule 25 (command -> compound_command .)


state 22

    (23) command -> assignment .

    RES_END         reduce using rule 23 (command -> assignment .)
    RES_ELSE        reduce using rule 23 (command -> assignment .)


state 23

    (30) calling_procedure -> IDENTIFICADOR .
    (31) calling_procedure -> IDENTIFICADOR . AP list_expression FP
    (61) variable -> IDENTIFICADOR .
    (62) variable -> IDENTIFICADOR . expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

  ! reduce/reduce conflict for RES_ELSE resolved using rule 30 (calling_procedure -> IDENTIFICADOR .)
  ! reduce/reduce conflict for RES_END resolved using rule 30 (calling_procedure -> IDENTIFICADOR .)
    RES_ELSE        reduce using rule 30 (calling_procedure -> IDENTIFICADOR .)
    RES_END         reduce using rule 30 (calling_procedure -> IDENTIFICADOR .)
    AP              shift and go to state 57
    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

  ! RES_ELSE        [ reduce using rule 61 (variable -> IDENTIFICADOR .) ]
  ! RES_END         [ reduce using rule 61 (variable -> IDENTIFICADOR .) ]

    simple_expression              shift and go to state 18
    expression                     shift and go to state 58

state 24

    (27) command -> command_loop_1 .

    RES_END         reduce using rule 27 (command -> command_loop_1 .)
    RES_ELSE        reduce using rule 27 (command -> command_loop_1 .)


state 25

    (34) command_loop_1 -> RES_WHILE . expression RES_DO command
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    simple_expression              shift and go to state 18
    expression                     shift and go to state 59

state 26

    (28) assignment -> variable .

    RES_ELSE        reduce using rule 28 (assignment -> variable .)
    RES_END         reduce using rule 28 (assignment -> variable .)


state 27

    (20) compound_command -> RES_BEGIN commands . RES_END
    (22) commands -> commands .

  ! shift/reduce conflict for RES_END resolved as shift
    RES_END         shift and go to state 60

  ! RES_END         [ reduce using rule 22 (commands -> commands .) ]


state 28

    (24) command -> calling_procedure .

    RES_END         reduce using rule 24 (command -> calling_procedure .)
    RES_ELSE        reduce using rule 24 (command -> calling_procedure .)


state 29

    (44) simple_expression -> OPSUB . term simple_expression_1
    (46) simple_expression -> OPSUB . term
    (51) term -> . factor term_1
    (52) term -> . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    term                           shift and go to state 61
    variable                       shift and go to state 47
    factor                         shift and go to state 48

state 30

    (21) commands -> command .

    RES_END         reduce using rule 21 (commands -> command .)


state 31

    (29) assignment -> expression .

    RES_ELSE        reduce using rule 29 (assignment -> expression .)
    RES_END         reduce using rule 29 (assignment -> expression .)


state 32

    (10) list_ids -> IDENTIFICADOR .

    SE_DOIS_PONTOS  reduce using rule 10 (list_ids -> IDENTIFICADOR .)
    SE_DELIMITADOR  reduce using rule 10 (list_ids -> IDENTIFICADOR .)


state 33

    (9) declare_variables -> type list_ids .

    SE_DELIMITADOR  reduce using rule 9 (declare_variables -> type list_ids .)


state 34

    (11) list_ids -> SE_VIRGULA . list_ids
    (10) list_ids -> . IDENTIFICADOR
    (11) list_ids -> . SE_VIRGULA list_ids
    (12) list_ids -> . empty
    (67) empty -> .

    IDENTIFICADOR   shift and go to state 32
    SE_VIRGULA      shift and go to state 34
    SE_DELIMITADOR  reduce using rule 67 (empty -> .)
    SE_DOIS_PONTOS  reduce using rule 67 (empty -> .)

    list_ids                       shift and go to state 62
    empty                          shift and go to state 35

state 35

    (12) list_ids -> empty .

    SE_DOIS_PONTOS  reduce using rule 12 (list_ids -> empty .)
    SE_DELIMITADOR  reduce using rule 12 (list_ids -> empty .)


state 36

    (5) part_declare_variables -> declare_variables SE_DELIMITADOR . part_declare_variables
    (5) part_declare_variables -> . declare_variables SE_DELIMITADOR part_declare_variables
    (6) part_declare_variables -> . empty
    (9) declare_variables -> . type list_ids
    (67) empty -> .
    (7) type -> . RES_INT
    (8) type -> . RES_BOOLEAN

    RES_BEGIN       reduce using rule 67 (empty -> .)
    RES_INT         shift and go to state 5
    RES_BOOLEAN     shift and go to state 7

    part_declare_variables         shift and go to state 63
    type                           shift and go to state 8
    declare_variables              shift and go to state 10
    empty                          shift and go to state 64

state 37

    (2) block -> part_declare_variables compound_command .

    RES_PROCEDURE   reduce using rule 2 (block -> part_declare_variables compound_command .)
    RES_BEGIN       reduce using rule 2 (block -> part_declare_variables compound_command .)
    $end            reduce using rule 2 (block -> part_declare_variables compound_command .)


state 38

    (3) block -> part_declare_subroutines compound_command .

    RES_PROCEDURE   reduce using rule 3 (block -> part_declare_subroutines compound_command .)
    RES_BEGIN       reduce using rule 3 (block -> part_declare_subroutines compound_command .)
    $end            reduce using rule 3 (block -> part_declare_subroutines compound_command .)


state 39

    (13) part_declare_subroutines -> declare_procedure part_declare_subroutines .

    RES_BEGIN       reduce using rule 13 (part_declare_subroutines -> declare_procedure part_declare_subroutines .)


state 40

    (14) part_declare_subroutines -> empty .

    RES_BEGIN       reduce using rule 14 (part_declare_subroutines -> empty .)


state 41

    (15) declare_procedure -> RES_PROCEDURE IDENTIFICADOR . formal_parameters block
    (16) declare_procedure -> RES_PROCEDURE IDENTIFICADOR . block
    (17) formal_parameters -> . AP section_formal_parameters FP
    (2) block -> . part_declare_variables compound_command
    (3) block -> . part_declare_subroutines compound_command
    (4) block -> . compound_command
    (5) part_declare_variables -> . declare_variables SE_DELIMITADOR part_declare_variables
    (6) part_declare_variables -> . empty
    (13) part_declare_subroutines -> . declare_procedure part_declare_subroutines
    (14) part_declare_subroutines -> . empty
    (20) compound_command -> . RES_BEGIN commands RES_END
    (9) declare_variables -> . type list_ids
    (67) empty -> .
    (15) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR formal_parameters block
    (16) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR block
    (7) type -> . RES_INT
    (8) type -> . RES_BOOLEAN

  ! shift/reduce conflict for RES_BEGIN resolved as shift
    AP              shift and go to state 65
    RES_BEGIN       shift and go to state 6
    RES_PROCEDURE   shift and go to state 16
    RES_INT         shift and go to state 5
    RES_BOOLEAN     shift and go to state 7

  ! RES_BEGIN       [ reduce using rule 67 (empty -> .) ]

    compound_command               shift and go to state 9
    declare_variables              shift and go to state 10
    part_declare_variables         shift and go to state 11
    formal_parameters              shift and go to state 66
    empty                          shift and go to state 12
    part_declare_subroutines       shift and go to state 13
    declare_procedure              shift and go to state 14
    type                           shift and go to state 8
    block                          shift and go to state 67

state 42

    (43) simple_expression -> OPSOMA term . simple_expression_1
    (45) simple_expression -> OPSOMA term .
    (47) simple_expression_1 -> . OPSOMA term simple_expression_1
    (48) simple_expression_1 -> . OPSUB term simple_expression_1
    (49) simple_expression_1 -> . RES_OR term simple_expression_1
    (50) simple_expression_1 -> . empty
    (67) empty -> .

  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
  ! reduce/reduce conflict for SE_IGUAL resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for SE_DIFERENTE resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for SE_MENOR resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for SE_MENOR_IGUAL resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for SE_MAIOR_IGUAL resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for SE_MAIOR resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for RES_END resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for RES_THEN resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for RES_ELSE resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for RES_DO resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for FP resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for OPMUL resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for RES_DIV resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for RES_AND resolved using rule 45 (simple_expression -> OPSOMA term .)
  ! reduce/reduce conflict for SE_VIRGULA resolved using rule 45 (simple_expression -> OPSOMA term .)
    SE_IGUAL        reduce using rule 45 (simple_expression -> OPSOMA term .)
    SE_DIFERENTE    reduce using rule 45 (simple_expression -> OPSOMA term .)
    SE_MENOR        reduce using rule 45 (simple_expression -> OPSOMA term .)
    SE_MENOR_IGUAL  reduce using rule 45 (simple_expression -> OPSOMA term .)
    SE_MAIOR_IGUAL  reduce using rule 45 (simple_expression -> OPSOMA term .)
    SE_MAIOR        reduce using rule 45 (simple_expression -> OPSOMA term .)
    RES_END         reduce using rule 45 (simple_expression -> OPSOMA term .)
    RES_ELSE        reduce using rule 45 (simple_expression -> OPSOMA term .)
    RES_DO          reduce using rule 45 (simple_expression -> OPSOMA term .)
    FP              reduce using rule 45 (simple_expression -> OPSOMA term .)
    SE_VIRGULA      reduce using rule 45 (simple_expression -> OPSOMA term .)
    RES_THEN        reduce using rule 45 (simple_expression -> OPSOMA term .)
    OPMUL           reduce using rule 45 (simple_expression -> OPSOMA term .)
    RES_DIV         reduce using rule 45 (simple_expression -> OPSOMA term .)
    RES_AND         reduce using rule 45 (simple_expression -> OPSOMA term .)
    OPSOMA          shift and go to state 68
    OPSUB           shift and go to state 69
    RES_OR          shift and go to state 70

  ! OPSOMA          [ reduce using rule 45 (simple_expression -> OPSOMA term .) ]
  ! OPSUB           [ reduce using rule 45 (simple_expression -> OPSOMA term .) ]
  ! RES_OR          [ reduce using rule 45 (simple_expression -> OPSOMA term .) ]
  ! OPSOMA          [ reduce using rule 67 (empty -> .) ]
  ! OPSUB           [ reduce using rule 67 (empty -> .) ]
  ! RES_OR          [ reduce using rule 67 (empty -> .) ]
  ! SE_IGUAL        [ reduce using rule 67 (empty -> .) ]
  ! SE_DIFERENTE    [ reduce using rule 67 (empty -> .) ]
  ! SE_MENOR        [ reduce using rule 67 (empty -> .) ]
  ! SE_MENOR_IGUAL  [ reduce using rule 67 (empty -> .) ]
  ! SE_MAIOR_IGUAL  [ reduce using rule 67 (empty -> .) ]
  ! SE_MAIOR        [ reduce using rule 67 (empty -> .) ]
  ! RES_END         [ reduce using rule 67 (empty -> .) ]
  ! RES_THEN        [ reduce using rule 67 (empty -> .) ]
  ! RES_ELSE        [ reduce using rule 67 (empty -> .) ]
  ! RES_DO          [ reduce using rule 67 (empty -> .) ]
  ! FP              [ reduce using rule 67 (empty -> .) ]
  ! OPMUL           [ reduce using rule 67 (empty -> .) ]
  ! RES_DIV         [ reduce using rule 67 (empty -> .) ]
  ! RES_AND         [ reduce using rule 67 (empty -> .) ]
  ! SE_VIRGULA      [ reduce using rule 67 (empty -> .) ]

    simple_expression_1            shift and go to state 71
    empty                          shift and go to state 72

state 43

    (60) factor -> RES_NOT . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    variable                       shift and go to state 47
    factor                         shift and go to state 73

state 44

    (59) factor -> AP . expression FP
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    simple_expression              shift and go to state 18
    expression                     shift and go to state 74

state 45

    (61) variable -> IDENTIFICADOR .
    (62) variable -> IDENTIFICADOR . expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
    RES_OR          reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_IGUAL        reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_DIFERENTE    reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_MENOR        reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_MENOR_IGUAL  reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_MAIOR_IGUAL  reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_MAIOR        reduce using rule 61 (variable -> IDENTIFICADOR .)
    RES_END         reduce using rule 61 (variable -> IDENTIFICADOR .)
    RES_THEN        reduce using rule 61 (variable -> IDENTIFICADOR .)
    RES_ELSE        reduce using rule 61 (variable -> IDENTIFICADOR .)
    RES_DO          reduce using rule 61 (variable -> IDENTIFICADOR .)
    FP              reduce using rule 61 (variable -> IDENTIFICADOR .)
    OPMUL           reduce using rule 61 (variable -> IDENTIFICADOR .)
    RES_DIV         reduce using rule 61 (variable -> IDENTIFICADOR .)
    RES_AND         reduce using rule 61 (variable -> IDENTIFICADOR .)
    SE_VIRGULA      reduce using rule 61 (variable -> IDENTIFICADOR .)
    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

  ! OPSOMA          [ reduce using rule 61 (variable -> IDENTIFICADOR .) ]
  ! OPSUB           [ reduce using rule 61 (variable -> IDENTIFICADOR .) ]

    simple_expression              shift and go to state 18
    expression                     shift and go to state 58

state 46

    (58) factor -> NUMERO .

    OPSOMA          reduce using rule 58 (factor -> NUMERO .)
    OPSUB           reduce using rule 58 (factor -> NUMERO .)
    RES_OR          reduce using rule 58 (factor -> NUMERO .)
    SE_IGUAL        reduce using rule 58 (factor -> NUMERO .)
    SE_DIFERENTE    reduce using rule 58 (factor -> NUMERO .)
    SE_MENOR        reduce using rule 58 (factor -> NUMERO .)
    SE_MENOR_IGUAL  reduce using rule 58 (factor -> NUMERO .)
    SE_MAIOR_IGUAL  reduce using rule 58 (factor -> NUMERO .)
    SE_MAIOR        reduce using rule 58 (factor -> NUMERO .)
    RES_END         reduce using rule 58 (factor -> NUMERO .)
    RES_THEN        reduce using rule 58 (factor -> NUMERO .)
    RES_ELSE        reduce using rule 58 (factor -> NUMERO .)
    RES_DO          reduce using rule 58 (factor -> NUMERO .)
    FP              reduce using rule 58 (factor -> NUMERO .)
    OPMUL           reduce using rule 58 (factor -> NUMERO .)
    RES_DIV         reduce using rule 58 (factor -> NUMERO .)
    RES_AND         reduce using rule 58 (factor -> NUMERO .)
    SE_VIRGULA      reduce using rule 58 (factor -> NUMERO .)


state 47

    (57) factor -> variable .

    OPSOMA          reduce using rule 57 (factor -> variable .)
    OPSUB           reduce using rule 57 (factor -> variable .)
    RES_OR          reduce using rule 57 (factor -> variable .)
    SE_IGUAL        reduce using rule 57 (factor -> variable .)
    SE_DIFERENTE    reduce using rule 57 (factor -> variable .)
    SE_MENOR        reduce using rule 57 (factor -> variable .)
    SE_MENOR_IGUAL  reduce using rule 57 (factor -> variable .)
    SE_MAIOR_IGUAL  reduce using rule 57 (factor -> variable .)
    SE_MAIOR        reduce using rule 57 (factor -> variable .)
    RES_END         reduce using rule 57 (factor -> variable .)
    RES_THEN        reduce using rule 57 (factor -> variable .)
    RES_ELSE        reduce using rule 57 (factor -> variable .)
    RES_DO          reduce using rule 57 (factor -> variable .)
    FP              reduce using rule 57 (factor -> variable .)
    OPMUL           reduce using rule 57 (factor -> variable .)
    RES_DIV         reduce using rule 57 (factor -> variable .)
    RES_AND         reduce using rule 57 (factor -> variable .)
    SE_VIRGULA      reduce using rule 57 (factor -> variable .)


state 48

    (51) term -> factor . term_1
    (52) term -> factor .
    (53) term_1 -> . OPMUL factor
    (54) term_1 -> . RES_DIV factor
    (55) term_1 -> . RES_AND factor
    (56) term_1 -> . term_1

  ! shift/reduce conflict for OPMUL resolved as shift
  ! shift/reduce conflict for RES_DIV resolved as shift
  ! shift/reduce conflict for RES_AND resolved as shift
    OPSOMA          reduce using rule 52 (term -> factor .)
    OPSUB           reduce using rule 52 (term -> factor .)
    RES_OR          reduce using rule 52 (term -> factor .)
    SE_IGUAL        reduce using rule 52 (term -> factor .)
    SE_DIFERENTE    reduce using rule 52 (term -> factor .)
    SE_MENOR        reduce using rule 52 (term -> factor .)
    SE_MENOR_IGUAL  reduce using rule 52 (term -> factor .)
    SE_MAIOR_IGUAL  reduce using rule 52 (term -> factor .)
    SE_MAIOR        reduce using rule 52 (term -> factor .)
    RES_END         reduce using rule 52 (term -> factor .)
    RES_THEN        reduce using rule 52 (term -> factor .)
    RES_ELSE        reduce using rule 52 (term -> factor .)
    RES_DO          reduce using rule 52 (term -> factor .)
    FP              reduce using rule 52 (term -> factor .)
    SE_VIRGULA      reduce using rule 52 (term -> factor .)
    OPMUL           shift and go to state 76
    RES_DIV         shift and go to state 78
    RES_AND         shift and go to state 77

  ! OPMUL           [ reduce using rule 52 (term -> factor .) ]
  ! RES_DIV         [ reduce using rule 52 (term -> factor .) ]
  ! RES_AND         [ reduce using rule 52 (term -> factor .) ]

    term_1                         shift and go to state 75

state 49

    (38) relation -> SE_DIFERENTE .

    OPSOMA          reduce using rule 38 (relation -> SE_DIFERENTE .)
    OPSUB           reduce using rule 38 (relation -> SE_DIFERENTE .)


state 50

    (39) relation -> SE_MENOR .

    OPSOMA          reduce using rule 39 (relation -> SE_MENOR .)
    OPSUB           reduce using rule 39 (relation -> SE_MENOR .)


state 51

    (42) relation -> SE_MAIOR .

    OPSOMA          reduce using rule 42 (relation -> SE_MAIOR .)
    OPSUB           reduce using rule 42 (relation -> SE_MAIOR .)


state 52

    (37) relation -> SE_IGUAL .

    OPSOMA          reduce using rule 37 (relation -> SE_IGUAL .)
    OPSUB           reduce using rule 37 (relation -> SE_IGUAL .)


state 53

    (40) relation -> SE_MENOR_IGUAL .

    OPSOMA          reduce using rule 40 (relation -> SE_MENOR_IGUAL .)
    OPSUB           reduce using rule 40 (relation -> SE_MENOR_IGUAL .)


state 54

    (36) expression -> simple_expression relation . simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    simple_expression              shift and go to state 79

state 55

    (41) relation -> SE_MAIOR_IGUAL .

    OPSOMA          reduce using rule 41 (relation -> SE_MAIOR_IGUAL .)
    OPSUB           reduce using rule 41 (relation -> SE_MAIOR_IGUAL .)


state 56

    (32) command_conditional_1 -> RES_IF expression . RES_THEN command
    (33) command_conditional_1 -> RES_IF expression . RES_THEN command RES_ELSE command

    RES_THEN        shift and go to state 80


state 57

    (31) calling_procedure -> IDENTIFICADOR AP . list_expression FP
    (63) list_expression -> . expression
    (64) list_expression -> . expression expression_1
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    list_expression                shift and go to state 81
    simple_expression              shift and go to state 18
    expression                     shift and go to state 82

state 58

    (62) variable -> IDENTIFICADOR expression .

    RES_ELSE        reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    RES_END         reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    OPSOMA          reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    OPSUB           reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    RES_OR          reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_IGUAL        reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_DIFERENTE    reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_MENOR        reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_MENOR_IGUAL  reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_MAIOR_IGUAL  reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_MAIOR        reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    RES_THEN        reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    RES_DO          reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    FP              reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    OPMUL           reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    RES_DIV         reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    RES_AND         reduce using rule 62 (variable -> IDENTIFICADOR expression .)
    SE_VIRGULA      reduce using rule 62 (variable -> IDENTIFICADOR expression .)


state 59

    (34) command_loop_1 -> RES_WHILE expression . RES_DO command

    RES_DO          shift and go to state 83


state 60

    (20) compound_command -> RES_BEGIN commands RES_END .

    RES_ELSE        reduce using rule 20 (compound_command -> RES_BEGIN commands RES_END .)
    RES_END         reduce using rule 20 (compound_command -> RES_BEGIN commands RES_END .)
    $end            reduce using rule 20 (compound_command -> RES_BEGIN commands RES_END .)
    RES_PROCEDURE   reduce using rule 20 (compound_command -> RES_BEGIN commands RES_END .)
    RES_BEGIN       reduce using rule 20 (compound_command -> RES_BEGIN commands RES_END .)


state 61

    (44) simple_expression -> OPSUB term . simple_expression_1
    (46) simple_expression -> OPSUB term .
    (47) simple_expression_1 -> . OPSOMA term simple_expression_1
    (48) simple_expression_1 -> . OPSUB term simple_expression_1
    (49) simple_expression_1 -> . RES_OR term simple_expression_1
    (50) simple_expression_1 -> . empty
    (67) empty -> .

  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
  ! reduce/reduce conflict for SE_IGUAL resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for SE_DIFERENTE resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for SE_MENOR resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for SE_MENOR_IGUAL resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for SE_MAIOR_IGUAL resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for SE_MAIOR resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for RES_END resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for RES_THEN resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for RES_ELSE resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for RES_DO resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for FP resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for OPMUL resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for RES_DIV resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for RES_AND resolved using rule 46 (simple_expression -> OPSUB term .)
  ! reduce/reduce conflict for SE_VIRGULA resolved using rule 46 (simple_expression -> OPSUB term .)
    SE_IGUAL        reduce using rule 46 (simple_expression -> OPSUB term .)
    SE_DIFERENTE    reduce using rule 46 (simple_expression -> OPSUB term .)
    SE_MENOR        reduce using rule 46 (simple_expression -> OPSUB term .)
    SE_MENOR_IGUAL  reduce using rule 46 (simple_expression -> OPSUB term .)
    SE_MAIOR_IGUAL  reduce using rule 46 (simple_expression -> OPSUB term .)
    SE_MAIOR        reduce using rule 46 (simple_expression -> OPSUB term .)
    RES_END         reduce using rule 46 (simple_expression -> OPSUB term .)
    RES_ELSE        reduce using rule 46 (simple_expression -> OPSUB term .)
    RES_DO          reduce using rule 46 (simple_expression -> OPSUB term .)
    FP              reduce using rule 46 (simple_expression -> OPSUB term .)
    SE_VIRGULA      reduce using rule 46 (simple_expression -> OPSUB term .)
    RES_THEN        reduce using rule 46 (simple_expression -> OPSUB term .)
    OPMUL           reduce using rule 46 (simple_expression -> OPSUB term .)
    RES_DIV         reduce using rule 46 (simple_expression -> OPSUB term .)
    RES_AND         reduce using rule 46 (simple_expression -> OPSUB term .)
    OPSOMA          shift and go to state 68
    OPSUB           shift and go to state 69
    RES_OR          shift and go to state 70

  ! OPSOMA          [ reduce using rule 46 (simple_expression -> OPSUB term .) ]
  ! OPSUB           [ reduce using rule 46 (simple_expression -> OPSUB term .) ]
  ! RES_OR          [ reduce using rule 46 (simple_expression -> OPSUB term .) ]
  ! OPSOMA          [ reduce using rule 67 (empty -> .) ]
  ! OPSUB           [ reduce using rule 67 (empty -> .) ]
  ! RES_OR          [ reduce using rule 67 (empty -> .) ]
  ! SE_IGUAL        [ reduce using rule 67 (empty -> .) ]
  ! SE_DIFERENTE    [ reduce using rule 67 (empty -> .) ]
  ! SE_MENOR        [ reduce using rule 67 (empty -> .) ]
  ! SE_MENOR_IGUAL  [ reduce using rule 67 (empty -> .) ]
  ! SE_MAIOR_IGUAL  [ reduce using rule 67 (empty -> .) ]
  ! SE_MAIOR        [ reduce using rule 67 (empty -> .) ]
  ! RES_END         [ reduce using rule 67 (empty -> .) ]
  ! RES_THEN        [ reduce using rule 67 (empty -> .) ]
  ! RES_ELSE        [ reduce using rule 67 (empty -> .) ]
  ! RES_DO          [ reduce using rule 67 (empty -> .) ]
  ! FP              [ reduce using rule 67 (empty -> .) ]
  ! OPMUL           [ reduce using rule 67 (empty -> .) ]
  ! RES_DIV         [ reduce using rule 67 (empty -> .) ]
  ! RES_AND         [ reduce using rule 67 (empty -> .) ]
  ! SE_VIRGULA      [ reduce using rule 67 (empty -> .) ]

    simple_expression_1            shift and go to state 84
    empty                          shift and go to state 72

state 62

    (11) list_ids -> SE_VIRGULA list_ids .

    SE_DOIS_PONTOS  reduce using rule 11 (list_ids -> SE_VIRGULA list_ids .)
    SE_DELIMITADOR  reduce using rule 11 (list_ids -> SE_VIRGULA list_ids .)


state 63

    (5) part_declare_variables -> declare_variables SE_DELIMITADOR part_declare_variables .

    RES_BEGIN       reduce using rule 5 (part_declare_variables -> declare_variables SE_DELIMITADOR part_declare_variables .)


state 64

    (6) part_declare_variables -> empty .

    RES_BEGIN       reduce using rule 6 (part_declare_variables -> empty .)


state 65

    (17) formal_parameters -> AP . section_formal_parameters FP
    (18) section_formal_parameters -> . RES_VAR list_ids SE_DOIS_PONTOS IDENTIFICADOR
    (19) section_formal_parameters -> . list_ids SE_DOIS_PONTOS IDENTIFICADOR
    (10) list_ids -> . IDENTIFICADOR
    (11) list_ids -> . SE_VIRGULA list_ids
    (12) list_ids -> . empty
    (67) empty -> .

    RES_VAR         shift and go to state 87
    IDENTIFICADOR   shift and go to state 32
    SE_VIRGULA      shift and go to state 34
    SE_DOIS_PONTOS  reduce using rule 67 (empty -> .)

    section_formal_parameters      shift and go to state 85
    list_ids                       shift and go to state 86
    empty                          shift and go to state 35

state 66

    (15) declare_procedure -> RES_PROCEDURE IDENTIFICADOR formal_parameters . block
    (2) block -> . part_declare_variables compound_command
    (3) block -> . part_declare_subroutines compound_command
    (4) block -> . compound_command
    (5) part_declare_variables -> . declare_variables SE_DELIMITADOR part_declare_variables
    (6) part_declare_variables -> . empty
    (13) part_declare_subroutines -> . declare_procedure part_declare_subroutines
    (14) part_declare_subroutines -> . empty
    (20) compound_command -> . RES_BEGIN commands RES_END
    (9) declare_variables -> . type list_ids
    (67) empty -> .
    (15) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR formal_parameters block
    (16) declare_procedure -> . RES_PROCEDURE IDENTIFICADOR block
    (7) type -> . RES_INT
    (8) type -> . RES_BOOLEAN

  ! shift/reduce conflict for RES_BEGIN resolved as shift
    RES_BEGIN       shift and go to state 6
    RES_PROCEDURE   shift and go to state 16
    RES_INT         shift and go to state 5
    RES_BOOLEAN     shift and go to state 7

  ! RES_BEGIN       [ reduce using rule 67 (empty -> .) ]

    compound_command               shift and go to state 9
    declare_variables              shift and go to state 10
    part_declare_variables         shift and go to state 11
    empty                          shift and go to state 12
    part_declare_subroutines       shift and go to state 13
    declare_procedure              shift and go to state 14
    type                           shift and go to state 8
    block                          shift and go to state 88

state 67

    (16) declare_procedure -> RES_PROCEDURE IDENTIFICADOR block .

    RES_PROCEDURE   reduce using rule 16 (declare_procedure -> RES_PROCEDURE IDENTIFICADOR block .)
    RES_BEGIN       reduce using rule 16 (declare_procedure -> RES_PROCEDURE IDENTIFICADOR block .)


state 68

    (47) simple_expression_1 -> OPSOMA . term simple_expression_1
    (51) term -> . factor term_1
    (52) term -> . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    term                           shift and go to state 89
    variable                       shift and go to state 47
    factor                         shift and go to state 48

state 69

    (48) simple_expression_1 -> OPSUB . term simple_expression_1
    (51) term -> . factor term_1
    (52) term -> . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    term                           shift and go to state 90
    variable                       shift and go to state 47
    factor                         shift and go to state 48

state 70

    (49) simple_expression_1 -> RES_OR . term simple_expression_1
    (51) term -> . factor term_1
    (52) term -> . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    term                           shift and go to state 91
    variable                       shift and go to state 47
    factor                         shift and go to state 48

state 71

    (43) simple_expression -> OPSOMA term simple_expression_1 .

    SE_IGUAL        reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    SE_DIFERENTE    reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    SE_MENOR        reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    SE_MENOR_IGUAL  reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    SE_MAIOR_IGUAL  reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    SE_MAIOR        reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_END         reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_ELSE        reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_DO          reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    FP              reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    SE_VIRGULA      reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_THEN        reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    OPSOMA          reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    OPSUB           reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_OR          reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    OPMUL           reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_DIV         reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)
    RES_AND         reduce using rule 43 (simple_expression -> OPSOMA term simple_expression_1 .)


state 72

    (50) simple_expression_1 -> empty .

    OPSOMA          reduce using rule 50 (simple_expression_1 -> empty .)
    OPSUB           reduce using rule 50 (simple_expression_1 -> empty .)
    RES_OR          reduce using rule 50 (simple_expression_1 -> empty .)
    SE_IGUAL        reduce using rule 50 (simple_expression_1 -> empty .)
    SE_DIFERENTE    reduce using rule 50 (simple_expression_1 -> empty .)
    SE_MENOR        reduce using rule 50 (simple_expression_1 -> empty .)
    SE_MENOR_IGUAL  reduce using rule 50 (simple_expression_1 -> empty .)
    SE_MAIOR_IGUAL  reduce using rule 50 (simple_expression_1 -> empty .)
    SE_MAIOR        reduce using rule 50 (simple_expression_1 -> empty .)
    RES_END         reduce using rule 50 (simple_expression_1 -> empty .)
    RES_THEN        reduce using rule 50 (simple_expression_1 -> empty .)
    RES_ELSE        reduce using rule 50 (simple_expression_1 -> empty .)
    RES_DO          reduce using rule 50 (simple_expression_1 -> empty .)
    FP              reduce using rule 50 (simple_expression_1 -> empty .)
    OPMUL           reduce using rule 50 (simple_expression_1 -> empty .)
    RES_DIV         reduce using rule 50 (simple_expression_1 -> empty .)
    RES_AND         reduce using rule 50 (simple_expression_1 -> empty .)
    SE_VIRGULA      reduce using rule 50 (simple_expression_1 -> empty .)


state 73

    (60) factor -> RES_NOT factor .

    OPSOMA          reduce using rule 60 (factor -> RES_NOT factor .)
    OPSUB           reduce using rule 60 (factor -> RES_NOT factor .)
    RES_OR          reduce using rule 60 (factor -> RES_NOT factor .)
    SE_IGUAL        reduce using rule 60 (factor -> RES_NOT factor .)
    SE_DIFERENTE    reduce using rule 60 (factor -> RES_NOT factor .)
    SE_MENOR        reduce using rule 60 (factor -> RES_NOT factor .)
    SE_MENOR_IGUAL  reduce using rule 60 (factor -> RES_NOT factor .)
    SE_MAIOR_IGUAL  reduce using rule 60 (factor -> RES_NOT factor .)
    SE_MAIOR        reduce using rule 60 (factor -> RES_NOT factor .)
    RES_END         reduce using rule 60 (factor -> RES_NOT factor .)
    RES_THEN        reduce using rule 60 (factor -> RES_NOT factor .)
    RES_ELSE        reduce using rule 60 (factor -> RES_NOT factor .)
    RES_DO          reduce using rule 60 (factor -> RES_NOT factor .)
    FP              reduce using rule 60 (factor -> RES_NOT factor .)
    OPMUL           reduce using rule 60 (factor -> RES_NOT factor .)
    RES_DIV         reduce using rule 60 (factor -> RES_NOT factor .)
    RES_AND         reduce using rule 60 (factor -> RES_NOT factor .)
    SE_VIRGULA      reduce using rule 60 (factor -> RES_NOT factor .)


state 74

    (59) factor -> AP expression . FP

    FP              shift and go to state 92


state 75

    (51) term -> factor term_1 .
    (56) term_1 -> term_1 .

  ! reduce/reduce conflict for OPSOMA resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for OPSUB resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_OR resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_IGUAL resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_DIFERENTE resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_MENOR resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_MENOR_IGUAL resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_MAIOR_IGUAL resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_MAIOR resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_END resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_THEN resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_ELSE resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_DO resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for FP resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for OPMUL resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_DIV resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for RES_AND resolved using rule 51 (term -> factor term_1 .)
  ! reduce/reduce conflict for SE_VIRGULA resolved using rule 51 (term -> factor term_1 .)
    OPSOMA          reduce using rule 51 (term -> factor term_1 .)
    OPSUB           reduce using rule 51 (term -> factor term_1 .)
    RES_OR          reduce using rule 51 (term -> factor term_1 .)
    SE_IGUAL        reduce using rule 51 (term -> factor term_1 .)
    SE_DIFERENTE    reduce using rule 51 (term -> factor term_1 .)
    SE_MENOR        reduce using rule 51 (term -> factor term_1 .)
    SE_MENOR_IGUAL  reduce using rule 51 (term -> factor term_1 .)
    SE_MAIOR_IGUAL  reduce using rule 51 (term -> factor term_1 .)
    SE_MAIOR        reduce using rule 51 (term -> factor term_1 .)
    RES_END         reduce using rule 51 (term -> factor term_1 .)
    RES_THEN        reduce using rule 51 (term -> factor term_1 .)
    RES_ELSE        reduce using rule 51 (term -> factor term_1 .)
    RES_DO          reduce using rule 51 (term -> factor term_1 .)
    FP              reduce using rule 51 (term -> factor term_1 .)
    OPMUL           reduce using rule 51 (term -> factor term_1 .)
    RES_DIV         reduce using rule 51 (term -> factor term_1 .)
    RES_AND         reduce using rule 51 (term -> factor term_1 .)
    SE_VIRGULA      reduce using rule 51 (term -> factor term_1 .)

  ! OPSOMA          [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! OPSUB           [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_OR          [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_IGUAL        [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_DIFERENTE    [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_MENOR        [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_MENOR_IGUAL  [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_MAIOR_IGUAL  [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_MAIOR        [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_END         [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_THEN        [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_ELSE        [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_DO          [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! FP              [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! OPMUL           [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_DIV         [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! RES_AND         [ reduce using rule 56 (term_1 -> term_1 .) ]
  ! SE_VIRGULA      [ reduce using rule 56 (term_1 -> term_1 .) ]


state 76

    (53) term_1 -> OPMUL . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    variable                       shift and go to state 47
    factor                         shift and go to state 93

state 77

    (55) term_1 -> RES_AND . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    variable                       shift and go to state 47
    factor                         shift and go to state 94

state 78

    (54) term_1 -> RES_DIV . factor
    (57) factor -> . variable
    (58) factor -> . NUMERO
    (59) factor -> . AP expression FP
    (60) factor -> . RES_NOT factor
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression

    NUMERO          shift and go to state 46
    AP              shift and go to state 44
    RES_NOT         shift and go to state 43
    IDENTIFICADOR   shift and go to state 45

    variable                       shift and go to state 47
    factor                         shift and go to state 95

state 79

    (36) expression -> simple_expression relation simple_expression .

    RES_ELSE        reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    RES_END         reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    RES_THEN        reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    FP              reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_VIRGULA      reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    OPSOMA          reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    OPSUB           reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    RES_OR          reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_IGUAL        reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_DIFERENTE    reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_MENOR        reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_MENOR_IGUAL  reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_MAIOR_IGUAL  reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    SE_MAIOR        reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    RES_DO          reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    OPMUL           reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    RES_DIV         reduce using rule 36 (expression -> simple_expression relation simple_expression .)
    RES_AND         reduce using rule 36 (expression -> simple_expression relation simple_expression .)


state 80

    (32) command_conditional_1 -> RES_IF expression RES_THEN . command
    (33) command_conditional_1 -> RES_IF expression RES_THEN . command RES_ELSE command
    (23) command -> . assignment
    (24) command -> . calling_procedure
    (25) command -> . compound_command
    (26) command -> . command_conditional_1
    (27) command -> . command_loop_1
    (28) assignment -> . variable
    (29) assignment -> . expression
    (30) calling_procedure -> . IDENTIFICADOR
    (31) calling_procedure -> . IDENTIFICADOR AP list_expression FP
    (20) compound_command -> . RES_BEGIN commands RES_END
    (32) command_conditional_1 -> . RES_IF expression RES_THEN command
    (33) command_conditional_1 -> . RES_IF expression RES_THEN command RES_ELSE command
    (34) command_loop_1 -> . RES_WHILE expression RES_DO command
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    IDENTIFICADOR   shift and go to state 23
    RES_BEGIN       shift and go to state 6
    RES_IF          shift and go to state 19
    RES_WHILE       shift and go to state 25
    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    command_loop_1                 shift and go to state 24
    calling_procedure              shift and go to state 28
    assignment                     shift and go to state 22
    command_conditional_1          shift and go to state 20
    compound_command               shift and go to state 21
    command                        shift and go to state 96
    variable                       shift and go to state 26
    simple_expression              shift and go to state 18
    expression                     shift and go to state 31

state 81

    (31) calling_procedure -> IDENTIFICADOR AP list_expression . FP

    FP              shift and go to state 97


state 82

    (63) list_expression -> expression .
    (64) list_expression -> expression . expression_1
    (65) expression_1 -> . SE_VIRGULA expression
    (66) expression_1 -> . expression_1

    FP              reduce using rule 63 (list_expression -> expression .)
    SE_VIRGULA      shift and go to state 99

    expression_1                   shift and go to state 98

state 83

    (34) command_loop_1 -> RES_WHILE expression RES_DO . command
    (23) command -> . assignment
    (24) command -> . calling_procedure
    (25) command -> . compound_command
    (26) command -> . command_conditional_1
    (27) command -> . command_loop_1
    (28) assignment -> . variable
    (29) assignment -> . expression
    (30) calling_procedure -> . IDENTIFICADOR
    (31) calling_procedure -> . IDENTIFICADOR AP list_expression FP
    (20) compound_command -> . RES_BEGIN commands RES_END
    (32) command_conditional_1 -> . RES_IF expression RES_THEN command
    (33) command_conditional_1 -> . RES_IF expression RES_THEN command RES_ELSE command
    (34) command_loop_1 -> . RES_WHILE expression RES_DO command
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    IDENTIFICADOR   shift and go to state 23
    RES_BEGIN       shift and go to state 6
    RES_IF          shift and go to state 19
    RES_WHILE       shift and go to state 25
    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    command_loop_1                 shift and go to state 24
    calling_procedure              shift and go to state 28
    assignment                     shift and go to state 22
    command_conditional_1          shift and go to state 20
    compound_command               shift and go to state 21
    command                        shift and go to state 100
    variable                       shift and go to state 26
    simple_expression              shift and go to state 18
    expression                     shift and go to state 31

state 84

    (44) simple_expression -> OPSUB term simple_expression_1 .

    SE_IGUAL        reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    SE_DIFERENTE    reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    SE_MENOR        reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    SE_MENOR_IGUAL  reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    SE_MAIOR_IGUAL  reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    SE_MAIOR        reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_END         reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_ELSE        reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_DO          reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    FP              reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    SE_VIRGULA      reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_THEN        reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    OPSOMA          reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    OPSUB           reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_OR          reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    OPMUL           reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_DIV         reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)
    RES_AND         reduce using rule 44 (simple_expression -> OPSUB term simple_expression_1 .)


state 85

    (17) formal_parameters -> AP section_formal_parameters . FP

    FP              shift and go to state 101


state 86

    (19) section_formal_parameters -> list_ids . SE_DOIS_PONTOS IDENTIFICADOR

    SE_DOIS_PONTOS  shift and go to state 102


state 87

    (18) section_formal_parameters -> RES_VAR . list_ids SE_DOIS_PONTOS IDENTIFICADOR
    (10) list_ids -> . IDENTIFICADOR
    (11) list_ids -> . SE_VIRGULA list_ids
    (12) list_ids -> . empty
    (67) empty -> .

    IDENTIFICADOR   shift and go to state 32
    SE_VIRGULA      shift and go to state 34
    SE_DOIS_PONTOS  reduce using rule 67 (empty -> .)

    list_ids                       shift and go to state 103
    empty                          shift and go to state 35

state 88

    (15) declare_procedure -> RES_PROCEDURE IDENTIFICADOR formal_parameters block .

    RES_PROCEDURE   reduce using rule 15 (declare_procedure -> RES_PROCEDURE IDENTIFICADOR formal_parameters block .)
    RES_BEGIN       reduce using rule 15 (declare_procedure -> RES_PROCEDURE IDENTIFICADOR formal_parameters block .)


state 89

    (47) simple_expression_1 -> OPSOMA term . simple_expression_1
    (47) simple_expression_1 -> . OPSOMA term simple_expression_1
    (48) simple_expression_1 -> . OPSUB term simple_expression_1
    (49) simple_expression_1 -> . RES_OR term simple_expression_1
    (50) simple_expression_1 -> . empty
    (67) empty -> .

  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
    OPSOMA          shift and go to state 68
    OPSUB           shift and go to state 69
    RES_OR          shift and go to state 70
    SE_IGUAL        reduce using rule 67 (empty -> .)
    SE_DIFERENTE    reduce using rule 67 (empty -> .)
    SE_MENOR        reduce using rule 67 (empty -> .)
    SE_MENOR_IGUAL  reduce using rule 67 (empty -> .)
    SE_MAIOR_IGUAL  reduce using rule 67 (empty -> .)
    SE_MAIOR        reduce using rule 67 (empty -> .)
    RES_END         reduce using rule 67 (empty -> .)
    RES_THEN        reduce using rule 67 (empty -> .)
    RES_ELSE        reduce using rule 67 (empty -> .)
    RES_DO          reduce using rule 67 (empty -> .)
    FP              reduce using rule 67 (empty -> .)
    OPMUL           reduce using rule 67 (empty -> .)
    RES_DIV         reduce using rule 67 (empty -> .)
    RES_AND         reduce using rule 67 (empty -> .)
    SE_VIRGULA      reduce using rule 67 (empty -> .)

  ! OPSOMA          [ reduce using rule 67 (empty -> .) ]
  ! OPSUB           [ reduce using rule 67 (empty -> .) ]
  ! RES_OR          [ reduce using rule 67 (empty -> .) ]

    simple_expression_1            shift and go to state 104
    empty                          shift and go to state 72

state 90

    (48) simple_expression_1 -> OPSUB term . simple_expression_1
    (47) simple_expression_1 -> . OPSOMA term simple_expression_1
    (48) simple_expression_1 -> . OPSUB term simple_expression_1
    (49) simple_expression_1 -> . RES_OR term simple_expression_1
    (50) simple_expression_1 -> . empty
    (67) empty -> .

  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
    OPSOMA          shift and go to state 68
    OPSUB           shift and go to state 69
    RES_OR          shift and go to state 70
    SE_IGUAL        reduce using rule 67 (empty -> .)
    SE_DIFERENTE    reduce using rule 67 (empty -> .)
    SE_MENOR        reduce using rule 67 (empty -> .)
    SE_MENOR_IGUAL  reduce using rule 67 (empty -> .)
    SE_MAIOR_IGUAL  reduce using rule 67 (empty -> .)
    SE_MAIOR        reduce using rule 67 (empty -> .)
    RES_END         reduce using rule 67 (empty -> .)
    RES_THEN        reduce using rule 67 (empty -> .)
    RES_ELSE        reduce using rule 67 (empty -> .)
    RES_DO          reduce using rule 67 (empty -> .)
    FP              reduce using rule 67 (empty -> .)
    OPMUL           reduce using rule 67 (empty -> .)
    RES_DIV         reduce using rule 67 (empty -> .)
    RES_AND         reduce using rule 67 (empty -> .)
    SE_VIRGULA      reduce using rule 67 (empty -> .)

  ! OPSOMA          [ reduce using rule 67 (empty -> .) ]
  ! OPSUB           [ reduce using rule 67 (empty -> .) ]
  ! RES_OR          [ reduce using rule 67 (empty -> .) ]

    simple_expression_1            shift and go to state 105
    empty                          shift and go to state 72

state 91

    (49) simple_expression_1 -> RES_OR term . simple_expression_1
    (47) simple_expression_1 -> . OPSOMA term simple_expression_1
    (48) simple_expression_1 -> . OPSUB term simple_expression_1
    (49) simple_expression_1 -> . RES_OR term simple_expression_1
    (50) simple_expression_1 -> . empty
    (67) empty -> .

  ! shift/reduce conflict for OPSOMA resolved as shift
  ! shift/reduce conflict for OPSUB resolved as shift
  ! shift/reduce conflict for RES_OR resolved as shift
    OPSOMA          shift and go to state 68
    OPSUB           shift and go to state 69
    RES_OR          shift and go to state 70
    SE_IGUAL        reduce using rule 67 (empty -> .)
    SE_DIFERENTE    reduce using rule 67 (empty -> .)
    SE_MENOR        reduce using rule 67 (empty -> .)
    SE_MENOR_IGUAL  reduce using rule 67 (empty -> .)
    SE_MAIOR_IGUAL  reduce using rule 67 (empty -> .)
    SE_MAIOR        reduce using rule 67 (empty -> .)
    RES_END         reduce using rule 67 (empty -> .)
    RES_THEN        reduce using rule 67 (empty -> .)
    RES_ELSE        reduce using rule 67 (empty -> .)
    RES_DO          reduce using rule 67 (empty -> .)
    FP              reduce using rule 67 (empty -> .)
    OPMUL           reduce using rule 67 (empty -> .)
    RES_DIV         reduce using rule 67 (empty -> .)
    RES_AND         reduce using rule 67 (empty -> .)
    SE_VIRGULA      reduce using rule 67 (empty -> .)

  ! OPSOMA          [ reduce using rule 67 (empty -> .) ]
  ! OPSUB           [ reduce using rule 67 (empty -> .) ]
  ! RES_OR          [ reduce using rule 67 (empty -> .) ]

    simple_expression_1            shift and go to state 106
    empty                          shift and go to state 72

state 92

    (59) factor -> AP expression FP .

    OPSOMA          reduce using rule 59 (factor -> AP expression FP .)
    OPSUB           reduce using rule 59 (factor -> AP expression FP .)
    RES_OR          reduce using rule 59 (factor -> AP expression FP .)
    SE_IGUAL        reduce using rule 59 (factor -> AP expression FP .)
    SE_DIFERENTE    reduce using rule 59 (factor -> AP expression FP .)
    SE_MENOR        reduce using rule 59 (factor -> AP expression FP .)
    SE_MENOR_IGUAL  reduce using rule 59 (factor -> AP expression FP .)
    SE_MAIOR_IGUAL  reduce using rule 59 (factor -> AP expression FP .)
    SE_MAIOR        reduce using rule 59 (factor -> AP expression FP .)
    RES_END         reduce using rule 59 (factor -> AP expression FP .)
    RES_THEN        reduce using rule 59 (factor -> AP expression FP .)
    RES_ELSE        reduce using rule 59 (factor -> AP expression FP .)
    RES_DO          reduce using rule 59 (factor -> AP expression FP .)
    FP              reduce using rule 59 (factor -> AP expression FP .)
    OPMUL           reduce using rule 59 (factor -> AP expression FP .)
    RES_DIV         reduce using rule 59 (factor -> AP expression FP .)
    RES_AND         reduce using rule 59 (factor -> AP expression FP .)
    SE_VIRGULA      reduce using rule 59 (factor -> AP expression FP .)


state 93

    (53) term_1 -> OPMUL factor .

    OPSOMA          reduce using rule 53 (term_1 -> OPMUL factor .)
    OPSUB           reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_OR          reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_IGUAL        reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_DIFERENTE    reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_MENOR        reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_MENOR_IGUAL  reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_MAIOR_IGUAL  reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_MAIOR        reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_END         reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_THEN        reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_ELSE        reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_DO          reduce using rule 53 (term_1 -> OPMUL factor .)
    FP              reduce using rule 53 (term_1 -> OPMUL factor .)
    OPMUL           reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_DIV         reduce using rule 53 (term_1 -> OPMUL factor .)
    RES_AND         reduce using rule 53 (term_1 -> OPMUL factor .)
    SE_VIRGULA      reduce using rule 53 (term_1 -> OPMUL factor .)


state 94

    (55) term_1 -> RES_AND factor .

    OPSOMA          reduce using rule 55 (term_1 -> RES_AND factor .)
    OPSUB           reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_OR          reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_IGUAL        reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_DIFERENTE    reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_MENOR        reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_MENOR_IGUAL  reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_MAIOR_IGUAL  reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_MAIOR        reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_END         reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_THEN        reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_ELSE        reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_DO          reduce using rule 55 (term_1 -> RES_AND factor .)
    FP              reduce using rule 55 (term_1 -> RES_AND factor .)
    OPMUL           reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_DIV         reduce using rule 55 (term_1 -> RES_AND factor .)
    RES_AND         reduce using rule 55 (term_1 -> RES_AND factor .)
    SE_VIRGULA      reduce using rule 55 (term_1 -> RES_AND factor .)


state 95

    (54) term_1 -> RES_DIV factor .

    OPSOMA          reduce using rule 54 (term_1 -> RES_DIV factor .)
    OPSUB           reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_OR          reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_IGUAL        reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_DIFERENTE    reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_MENOR        reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_MENOR_IGUAL  reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_MAIOR_IGUAL  reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_MAIOR        reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_END         reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_THEN        reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_ELSE        reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_DO          reduce using rule 54 (term_1 -> RES_DIV factor .)
    FP              reduce using rule 54 (term_1 -> RES_DIV factor .)
    OPMUL           reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_DIV         reduce using rule 54 (term_1 -> RES_DIV factor .)
    RES_AND         reduce using rule 54 (term_1 -> RES_DIV factor .)
    SE_VIRGULA      reduce using rule 54 (term_1 -> RES_DIV factor .)


state 96

    (32) command_conditional_1 -> RES_IF expression RES_THEN command .
    (33) command_conditional_1 -> RES_IF expression RES_THEN command . RES_ELSE command

  ! shift/reduce conflict for RES_ELSE resolved as shift
    RES_END         reduce using rule 32 (command_conditional_1 -> RES_IF expression RES_THEN command .)
    RES_ELSE        shift and go to state 107

  ! RES_ELSE        [ reduce using rule 32 (command_conditional_1 -> RES_IF expression RES_THEN command .) ]


state 97

    (31) calling_procedure -> IDENTIFICADOR AP list_expression FP .

    RES_ELSE        reduce using rule 31 (calling_procedure -> IDENTIFICADOR AP list_expression FP .)
    RES_END         reduce using rule 31 (calling_procedure -> IDENTIFICADOR AP list_expression FP .)


state 98

    (64) list_expression -> expression expression_1 .
    (66) expression_1 -> expression_1 .

  ! reduce/reduce conflict for FP resolved using rule 64 (list_expression -> expression expression_1 .)
    FP              reduce using rule 64 (list_expression -> expression expression_1 .)

  ! FP              [ reduce using rule 66 (expression_1 -> expression_1 .) ]


state 99

    (65) expression_1 -> SE_VIRGULA . expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    simple_expression              shift and go to state 18
    expression                     shift and go to state 108

state 100

    (34) command_loop_1 -> RES_WHILE expression RES_DO command .

    RES_ELSE        reduce using rule 34 (command_loop_1 -> RES_WHILE expression RES_DO command .)
    RES_END         reduce using rule 34 (command_loop_1 -> RES_WHILE expression RES_DO command .)


state 101

    (17) formal_parameters -> AP section_formal_parameters FP .

    RES_BEGIN       reduce using rule 17 (formal_parameters -> AP section_formal_parameters FP .)
    RES_PROCEDURE   reduce using rule 17 (formal_parameters -> AP section_formal_parameters FP .)
    RES_INT         reduce using rule 17 (formal_parameters -> AP section_formal_parameters FP .)
    RES_BOOLEAN     reduce using rule 17 (formal_parameters -> AP section_formal_parameters FP .)


state 102

    (19) section_formal_parameters -> list_ids SE_DOIS_PONTOS . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 109


state 103

    (18) section_formal_parameters -> RES_VAR list_ids . SE_DOIS_PONTOS IDENTIFICADOR

    SE_DOIS_PONTOS  shift and go to state 110


state 104

    (47) simple_expression_1 -> OPSOMA term simple_expression_1 .

    OPSOMA          reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    OPSUB           reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_OR          reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_IGUAL        reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_DIFERENTE    reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_MENOR        reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_MENOR_IGUAL  reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_MAIOR_IGUAL  reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_MAIOR        reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_END         reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_THEN        reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_ELSE        reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_DO          reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    FP              reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    OPMUL           reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_DIV         reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    RES_AND         reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)
    SE_VIRGULA      reduce using rule 47 (simple_expression_1 -> OPSOMA term simple_expression_1 .)


state 105

    (48) simple_expression_1 -> OPSUB term simple_expression_1 .

    OPSOMA          reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    OPSUB           reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_OR          reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_IGUAL        reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_DIFERENTE    reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_MENOR        reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_MENOR_IGUAL  reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_MAIOR_IGUAL  reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_MAIOR        reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_END         reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_THEN        reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_ELSE        reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_DO          reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    FP              reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    OPMUL           reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_DIV         reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    RES_AND         reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)
    SE_VIRGULA      reduce using rule 48 (simple_expression_1 -> OPSUB term simple_expression_1 .)


state 106

    (49) simple_expression_1 -> RES_OR term simple_expression_1 .

    OPSOMA          reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    OPSUB           reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_OR          reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_IGUAL        reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_DIFERENTE    reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_MENOR        reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_MENOR_IGUAL  reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_MAIOR_IGUAL  reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_MAIOR        reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_END         reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_THEN        reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_ELSE        reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_DO          reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    FP              reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    OPMUL           reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_DIV         reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    RES_AND         reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)
    SE_VIRGULA      reduce using rule 49 (simple_expression_1 -> RES_OR term simple_expression_1 .)


state 107

    (33) command_conditional_1 -> RES_IF expression RES_THEN command RES_ELSE . command
    (23) command -> . assignment
    (24) command -> . calling_procedure
    (25) command -> . compound_command
    (26) command -> . command_conditional_1
    (27) command -> . command_loop_1
    (28) assignment -> . variable
    (29) assignment -> . expression
    (30) calling_procedure -> . IDENTIFICADOR
    (31) calling_procedure -> . IDENTIFICADOR AP list_expression FP
    (20) compound_command -> . RES_BEGIN commands RES_END
    (32) command_conditional_1 -> . RES_IF expression RES_THEN command
    (33) command_conditional_1 -> . RES_IF expression RES_THEN command RES_ELSE command
    (34) command_loop_1 -> . RES_WHILE expression RES_DO command
    (61) variable -> . IDENTIFICADOR
    (62) variable -> . IDENTIFICADOR expression
    (35) expression -> . simple_expression
    (36) expression -> . simple_expression relation simple_expression
    (43) simple_expression -> . OPSOMA term simple_expression_1
    (44) simple_expression -> . OPSUB term simple_expression_1
    (45) simple_expression -> . OPSOMA term
    (46) simple_expression -> . OPSUB term

    IDENTIFICADOR   shift and go to state 23
    RES_BEGIN       shift and go to state 6
    RES_IF          shift and go to state 19
    RES_WHILE       shift and go to state 25
    OPSOMA          shift and go to state 17
    OPSUB           shift and go to state 29

    command_loop_1                 shift and go to state 24
    calling_procedure              shift and go to state 28
    assignment                     shift and go to state 22
    command_conditional_1          shift and go to state 20
    compound_command               shift and go to state 21
    command                        shift and go to state 111
    variable                       shift and go to state 26
    simple_expression              shift and go to state 18
    expression                     shift and go to state 31

state 108

    (65) expression_1 -> SE_VIRGULA expression .

    FP              reduce using rule 65 (expression_1 -> SE_VIRGULA expression .)


state 109

    (19) section_formal_parameters -> list_ids SE_DOIS_PONTOS IDENTIFICADOR .

    FP              reduce using rule 19 (section_formal_parameters -> list_ids SE_DOIS_PONTOS IDENTIFICADOR .)


state 110

    (18) section_formal_parameters -> RES_VAR list_ids SE_DOIS_PONTOS . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 112


state 111

    (33) command_conditional_1 -> RES_IF expression RES_THEN command RES_ELSE command .

    RES_ELSE        reduce using rule 33 (command_conditional_1 -> RES_IF expression RES_THEN command RES_ELSE command .)
    RES_END         reduce using rule 33 (command_conditional_1 -> RES_IF expression RES_THEN command RES_ELSE command .)


state 112

    (18) section_formal_parameters -> RES_VAR list_ids SE_DOIS_PONTOS IDENTIFICADOR .

    FP              reduce using rule 18 (section_formal_parameters -> RES_VAR list_ids SE_DOIS_PONTOS IDENTIFICADOR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RES_BEGIN in state 4 resolved as shift
WARNING: shift/reduce conflict for SE_IGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for SE_DIFERENTE in state 18 resolved as shift
WARNING: shift/reduce conflict for SE_MENOR in state 18 resolved as shift
WARNING: shift/reduce conflict for SE_MENOR_IGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for SE_MAIOR_IGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for SE_MAIOR in state 18 resolved as shift
WARNING: shift/reduce conflict for RES_END in state 27 resolved as shift
WARNING: shift/reduce conflict for RES_BEGIN in state 41 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 42 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 42 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 42 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 42 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 42 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 42 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 45 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 45 resolved as shift
WARNING: shift/reduce conflict for OPMUL in state 48 resolved as shift
WARNING: shift/reduce conflict for RES_DIV in state 48 resolved as shift
WARNING: shift/reduce conflict for RES_AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 61 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 61 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 61 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 61 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 61 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 61 resolved as shift
WARNING: shift/reduce conflict for RES_BEGIN in state 66 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 89 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 89 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 89 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 90 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 90 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 90 resolved as shift
WARNING: shift/reduce conflict for OPSOMA in state 91 resolved as shift
WARNING: shift/reduce conflict for OPSUB in state 91 resolved as shift
WARNING: shift/reduce conflict for RES_OR in state 91 resolved as shift
WARNING: shift/reduce conflict for RES_ELSE in state 96 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (part_declare_variables -> empty)
WARNING: rejected rule (part_declare_subroutines -> empty) in state 12
WARNING: reduce/reduce conflict in state 23 resolved using rule (calling_procedure -> IDENTIFICADOR)
WARNING: rejected rule (variable -> IDENTIFICADOR) in state 23
WARNING: reduce/reduce conflict in state 42 resolved using rule (simple_expression -> OPSOMA term)
WARNING: rejected rule (empty -> <empty>) in state 42
WARNING: reduce/reduce conflict in state 61 resolved using rule (simple_expression -> OPSUB term)
WARNING: rejected rule (empty -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 75 resolved using rule (term -> factor term_1)
WARNING: rejected rule (term_1 -> term_1) in state 75
WARNING: reduce/reduce conflict in state 98 resolved using rule (list_expression -> expression expression_1)
WARNING: rejected rule (expression_1 -> expression_1) in state 98
WARNING: Rule (term_1 -> term_1) is never reduced
WARNING: Rule (expression_1 -> expression_1) is never reduced
